---

- block:
    - name: build hosts file
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ hostvars[item].name }}$'
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ hostvars[item].name }}.{{ domain_name }} {{ hostvars[item].name }}"
        state: present
      when: hostvars[item].name is defined
      loop: "{{ play_hosts }}"

    - name: build hosts file
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}.{{ domain_name }} {{ item }}"
        state: present
      when: hostvars[item].name is undefined
      loop: "{{ play_hosts }}"

  when: hostvars[item].ansible_default_ipv4.address is defined

- name: gather new facts
  setup:

- name: check subscription status
  command: subscription-manager status
  register: sat_sub_status
  failed_when: false

- name: output subscription status
  debug:
    msg: "{{ sat_sub_status }}"

- name: Add EPEL repo for RHEL 8
  yum_repository:
    name: epel
    description: EPEL for Enterprise Linux 8
    baseurl: https://dl.fedoraproject.org/pub/epel/8/Everything/x86_64/
    enabled: yes
    gpgcheck: no
  when: ansible_distribution_major_version|int == 8

- name: ensure prereq packages are present
  package:
    name:
      - compat-sap-c++-9
      - nfs-utils
      - nfs4-acl-tools
      - s3fs-fuse
      - sysstat

- name: ensure stats service is enabled and started
  service:
    name: sysstat
    state: started
    enabled: yes

- name: ensure software repo directory exists
  file:
    path: "{{ local_repo_path }}"
    state: directory

- name: Mount bucket to mount point
  mount:
    fstype: fuse
    src: "s3fs#{{ aws_storage_bucket_name }}"
    path: "{{ local_repo_path }}"
    opts: "_netdev,ro,allow_other,nonempty,iam_role=s3_role_{{ aws_storage_bucket_name | replace('-', '_') }},uid=0,gid=0,umask=0022"
    state: mounted
  no_log: yes

- name: ensure installation directories exists
  file:
    path: "{{ sap_install_sapcar_path }}"
    state: directory
  when: sap_install_sapcar_path is defined

- name: ensure SAPCAR is copied to target directories
  copy:
    src: "{{ local_repo_path }}/SAPCAR/{{ sap_install_sapcar_file_name }}"
    dest: "{{ sap_install_sapcar_path }}/{{ sap_install_sapcar_file_name }}"
    remote_src: yes
    mode: u+rwx,g+rx,o+rx
  when: sap_install_sapcar_path is defined

# this seems to be only needed on 8.1 AMI on AWS
- block:
    # existence of tuned package causes yum conflict in the next step, remove for idempotency
    - name: ensure tuned package is not installed
      package:
        name: tuned
        state: absent

    - name: install @server group and skip broken
      command: yum install @server --skip-broken -y
      failed_when: false

    - name: install @server group
      yum:
        name: '@server'
        state: present
  when: ('4.18.0-147.el8.x86_64' in ansible_kernel)

- block:
    - name: check if swap exists
      stat:
        path: /dev/mapper/{{ storage_pools[0].name }}-swap
      register: swap_check

    - include_tasks: swap.yml
      when: not swap_check.stat.exists
  when:
    - storage_pools is defined
    - storage_pools | length > 0
    - storage_pools[0].name is defined
    - ('swap' in (storage_pools[0].volumes | map(attribute='name') | list))

#- name: set grub to default to the old kernel for kernel patching scenario
#  shell: /usr/sbin/grubby --set-default-index=1
#
#- name: Reboot the machine
#  reboot: